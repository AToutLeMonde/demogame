{"version":3,"sources":["components/NavigationBar.tsx","utils/notifications.ts","utils/debounced.ts","utils/random.ts","utils/avatars.ts","components/GameAvatar.tsx","components/GameAvatar2.tsx","components/Bag.tsx","config.ts","api/callApi.ts","api/players/createPlayerApi.ts","api/players/getPlayersApi.ts","api/leads/confirmLeadApi.ts","api/leads/createLeadApi.ts","api/leads/getConfirmedLeadsApi.ts","api/leads/getNotConfirmedLeadsApi.ts","api/game/clearGameApi.ts","store/lib.ts","store/store.ts","store/hooks.ts","pages/RulesPage.tsx","pages/CreatePlayerPage.tsx","pages/Game1/Game1.tsx","pages/Game1/useGame1.ts","pages/Game2/useGame2.ts","pages/Game2/Game2.tsx","App.tsx","api/configAxios.ts","index.tsx"],"names":["NavigationBar","props","React","useState","value","state","setState","Header","size","items","Items","align","design","onChange","e","label","map","Item","toast","NotificationService","showApiBad","warning","title","message","showGoodLead","profit","success","convertNumberToString","delay","showBadLead","_","callback","leading","getRandom","min","max","random","noses","mouths","eyes","eyebrows","professions","generateAvatar","avatar","eyebrowsIndex","length","eyesIndex","noseIndex","mouthIndex","salary","amount","nose","mouth","profession","parseAvatar","parts","split","parseInt","Container","styled","div","Img","img","Caption","rootUrl","GameAvatar","x","y","console","error","isVisible","avatarImg","string","style","display","left","top","onMouseDown","onClick","index","alt","src","GameAvatar2","Bag","config","process","getResp","resp","data","isOk","status","callApi","callFn","errorCallBackFn","a","undefined","response","result","body","url","createPlayerApi","player","axios","post","getPlayersApi","get","confirmLeadApi","leadId","createLeadApi","lead","getConfirmedLeadsApi","getNotConfirmedLeadsApi","playerId","clearGameApi","buildAvatars","store","createStore","currentPage","setCurrentPage","action","payload","bagX","setBagX","avatars","hideAvatar","regenerateAvatats","newAvatars","notVisibleIndexes","forEach","i","push","avatarIndex","splice","leadPositions","hiddenLeadIds","catchedIds","catchLeadId","indexOf","find","updateLeadPosition","found","speed","filter","playerIds","playerById","scoreByPlayerId","confirmedLeadIds","confirmedLeadById","myConfrimedLeadIds","nonConfirmedLeadIds","nonConfirmedLeadById","isReady","getState","thunk","actions","helpers","setGameIsReady","setGameIsNotReady","setPlayer","setPlayers","ids","byId","id","setConfirmedLeads","myLeadIds","myId","group","playerGroup","fromPlayerId","toPlayerId","setNonConfirmedLeads","startGame","loadPlayers","loadConfirmedLeads","calculatePlayersScore","loadNonConfirmedLeads","scoreById","fromPlayer","toPlayer","fromPlayerScore","toPlayerScore","clearGame","createTypedHooks","useStoreActions","useStoreState","useAppActions","useStore","useAppStore","RulesPage","Grid","Row","Col","Card","header","Groups","Title","Subtitle","fontSize","footer","justifyContent","Button","Forward","lineHeight","marginBottom","CreatePlayerPage","name","Math","floor","values","setValues","errors","setErrors","handleCreatePlayer","nameError","handleValidate","groupError","playerName","toValidate","trim","newValues","handleChangeValue","Console","FormField","Label","required","Content","Input","onBlur","target","Message","color","width","border","opacity","Game1","playingMusic","setPlayingMusic","useSound","volume","onend","playTheme","stop","useEffect","timer","useRef","t","setTimeout","current","setInterval","clearTimeout","clearInterval","interrupt","playCatch","nextPlayerIndex","setNextPlayerIndex","players","confirmed","useGame1","xPositions","isPosIntersect","minAx","minAy","maxAx","maxAy","minBy","maxBx","maxBy","useGame2","leadsTimer","fallingTimer","setCatchIsPlaying","fallLeads","xPosIndex","generateLeadPosition","onMouseMove","log","isIntersect","pageX","Game2","height","pos","App","Notifications","service","limit","valign","defaults","headers","ReactDOM","render","StrictMode","Body","document","getElementById"],"mappings":"6LAMaA,EAAgB,SAACC,GAC5B,IAKA,EAA0BC,IAAMC,SAAS,CAAEC,MAAO,SAAlD,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OACE,cAACC,EAAA,EAAD,CACEC,KAAK,IACLC,MACE,cAACF,EAAA,EAAOG,MAAR,CACEC,MAAM,SACNC,OAAO,UACPC,SAVa,SAACC,EAAGV,GAAJ,OAAcE,EAAS,CAAEF,WAWtCA,MAAOC,EAAMD,MAJf,SAbQ,CACZ,CAAEA,MAAO,OAAQW,MAAO,6BAkBXC,KAAI,gBAAGZ,EAAH,EAAGA,MAAOW,EAAV,EAAUA,MAAV,OACT,cAACR,EAAA,EAAOU,KAAR,CAAyBb,MAAOA,EAAOW,MAAOA,GAA5BX,W,wBCxBjBc,EAAQ,IAAIC,IAGZC,EAAa,WACxBF,EAAMG,QAAQ,CACZC,MAAO,iGACPC,QAAS,uEAKAC,EAAe,SAACC,GAC3BP,EAAMQ,QAAQ,CACZH,QAAQ,8EAAD,OAAoBI,gCAAsBF,IACjDG,MAAO,QAKEC,EAAc,SAACJ,GAC1BP,EAAMG,QAAQ,CACZE,QAAQ,mEAAD,OAAmBI,gCAAsBF,IAChDG,MAAO,Q,WCvBiBE,YAAW,SAACC,GAEtCA,MACC,IAAK,CAACC,SAAS,IAEeF,YAAW,SAACC,GAE3CA,MACC,GAAI,CAACC,SAAS,I,gBCPJC,EAAY,SAACC,EAAYC,GACpC,OAAOC,IAAOF,EAAKC,ICFfE,EAAQ,CAAC,YACb,YACA,YACA,YACA,YACA,YACA,aAEIC,EAAS,CACb,aACA,aACA,aACA,aACA,aACA,aACA,cAGIC,EAAO,CACX,WACA,WACA,WACA,WACA,WACA,WACA,YAGIC,EAAW,CACf,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAc,CAAC,+DAAc,qEAAe,yDAAa,mDAAY,6CAAW,2BAAQ,sHAAwB,mDAAY,6CAAW,mDAAY,6CAAW,uCAAU,+DAAc,+DAAc,6CAAW,mDAAY,oGAAqB,mDAAY,uCAAU,6FAAmB,iFAAiB,qEAAe,uCAAU,6CAAW,6CAAW,4EAAiB,yDAAa,6CAAW,kIAA0B,yDAAa,kCAElaC,EAAiB,WAE5B,IAAMC,EAAS,CACbC,cAAeX,EAAU,EAAGO,EAASK,OAAO,GAC5CC,UAAWb,EAAU,EAAGM,EAAKM,OAAO,GACpCE,UAAWd,EAAU,EAAGI,EAAMQ,OAAO,GACrCG,WAAYf,EAAU,EAAGK,EAAOO,OAAO,IAGrCI,EAAShB,EAAU,KAAO,KAC1BiB,EAASjB,EAAU,EAAG,KAAO,EAAe,GAATgB,EAAgBA,EAAShB,EAAU,EAAG,GACzER,EAAkB,GAATwB,EAAcC,GAAmB,IAAVA,EAA0B,IAATA,EAIrD,MAAO,CACLV,SAAUA,EAASG,EAAOC,eAC1BL,KAAMA,EAAKI,EAAOG,WAClBK,KAAMd,EAAMM,EAAOI,WACnBK,MAAOd,EAAOK,EAAOK,YACrBL,OAAO,GAAD,OAAKA,EAAOC,cAAZ,YAA6BD,EAAOG,UAApC,YAAiDH,EAAOI,UAAxD,YAAqEJ,EAAOK,YAClFK,WAAYZ,EAAYR,EAAU,EAAG,KACrCgB,SACAC,SACAzB,WAKS6B,EAAc,SAACX,GAC1B,IAAMY,EAAQZ,EAAOa,MAAM,KAE3B,MAAO,CACLhB,SAAUA,EAASiB,SAASF,EAAM,KAClChB,KAAMA,EAAKkB,SAASF,EAAM,KAC1BJ,KAAMd,EAAMoB,SAASF,EAAM,KAC3BH,MAAOd,EAAOmB,SAASF,EAAM,O,OCxE3BG,EAAYC,IAAOC,IAAV,sQAgBTC,EAAMF,IAAOG,IAAV,6HASHC,EAAUJ,IAAOC,IAAV,8LAWPI,EAAU,kCAEHC,EAAa,SAAChE,GAEpBA,EAAMiE,GAAMjE,EAAMkE,GACrBC,QAAQC,MAAM,MAAOpE,GAIvB,IAAMqE,IAAYrE,EAAMqE,UAEpBC,EAAYtE,EAAMuE,OAASlB,EAAYrD,EAAMuE,QAAU9B,IAQrD+B,EAAa,CACjBC,QAASJ,EAAY,QAAU,QASjC,OANIrE,EAAMiE,GAAKjE,EAAMkE,IACnBM,EAAMP,EAAIjE,EAAMiE,EAChBO,EAAMN,EAAIlE,EAAMkE,GAKhB,qCAEE,eAACT,EAAD,CACEe,MAAO,CACLE,KAAM1E,EAAMiE,GAAK,QAASU,IAAK3E,EAAMkE,GAAK,QAC1CO,QAASJ,EAAY,QAAU,QAEjCO,YAxBc,WACd5E,EAAM6E,SACR7E,EAAM6E,QAAQ7E,EAAM8E,QAiBpB,UAOE,cAAClB,EAAD,CAAKmB,IAAI,GAAGC,IAAG,UAAKjB,EAAL,eACf,cAACH,EAAD,CAAKmB,IAAI,GAAGC,IAAG,UAAKjB,EAAL,YAAgBO,EAAU/B,YACzC,cAACqB,EAAD,CAAKmB,IAAI,GAAGC,IAAG,UAAKjB,EAAL,YAAgBO,EAAUhC,QACzC,cAACsB,EAAD,CAAKmB,IAAI,GAAGC,IAAG,UAAKjB,EAAL,YAAgBO,EAAUpB,QACzC,cAACU,EAAD,CAAKmB,IAAI,GAAGC,IAAG,UAAKjB,EAAL,YAAgBO,EAAUnB,YAE3C,cAACW,EAAD,CACEU,MAAO,CACLE,KAAM1E,EAAMiE,EAAI,GAAIU,IAAK3E,EAAMkE,EAAI,IACnCO,QAASJ,EAAY,QAAU,QAHnC,SAKGrE,EAAMoD,iBCrFTK,EAAYC,IAAOC,IAAV,+HAWTC,EAAMF,IAAOG,IAAV,6HAUHC,EAAUJ,IAAOC,IAAV,oNAcPI,EAAU,kCAEHkB,EAAc,SAACjF,GAK1B,IAAIsE,EAAYtE,EAAMuE,OAASlB,EAAYrD,EAAMuE,QAAU9B,IAU3D,OACE,qCAEE,eAAC,EAAD,CACA+B,MAAO,CAACE,KAAM1E,EAAMiE,EAAGU,IAAK3E,EAAMkE,GACjCW,QAbe,WACd7E,EAAM6E,SACR7E,EAAM6E,QAAQ7E,EAAM8E,QASpB,UAIE,cAAC,EAAD,CAAKC,IAAI,GAAGC,IAAG,UAAKjB,EAAL,eACf,cAAC,EAAD,CAAKgB,IAAI,GAAGC,IAAG,UAAKjB,EAAL,YAAgBO,EAAU/B,YACzC,cAAC,EAAD,CAAKwC,IAAI,GAAGC,IAAG,UAAKjB,EAAL,YAAgBO,EAAUhC,QACzC,cAAC,EAAD,CAAKyC,IAAI,GAAGC,IAAG,UAAKjB,EAAL,YAAgBO,EAAUpB,QACzC,cAAC,EAAD,CAAK6B,IAAI,GAAGC,IAAG,UAAKjB,EAAL,YAAgBO,EAAUnB,YAE3C,eAAC,EAAD,CACEqB,MAAO,CAACE,KAAM1E,EAAMiE,EAAE,EAAGU,IAAK3E,EAAMkE,EAAE,KADxC,UAGOlE,EAAMoD,WAAW,uBAHxB,yCAIc1B,gCAAsB1B,EAAMiD,QAJ1C,SAImD,uBAJnD,iBAKUvB,gCAAsB1B,EAAMgD,QALtC,gBClEAS,EAAYC,IAAOC,IAAV,iLAaTC,EAAMF,IAAOG,IAAV,oGAWIqB,EAAM,SAAClF,GAIlB,OACE,mCAEE,cAAC,EAAD,CACEwE,MAAO,CAAEE,KAAM1E,EAAMiE,GADvB,SAIE,cAAC,EAAD,CAAKc,IAAI,GAAGC,IAAG,UAbP,6BAaO,mB,wHCzChB,I,MAAMG,GACCC,gECDRC,GAAU,SAACC,GAAU,IAAD,IACxB,OAAW,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMC,YAAN,eAAYA,MAAZ,OAAmBD,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAMC,YAAzB,aAAmB,EAAYA,KAA/B,OAAsCD,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAMC,MAG/CC,GAAO,SAACF,GACZ,QAAKA,IAEe,MAAhBA,EAAKG,QAAkC,MAAhBH,EAAKG,SAOrBC,GAAO,yCAAG,WAAQC,EAAQC,GAAhB,wBAAAC,EAAA,6DAUjBP,EAAO,KACPlB,OAAQ0B,EAXS,kBAeNH,IAfM,OAenBL,EAfmB,uDAiBnBA,EAAO,KAAIS,SACX3B,EAAK,KAlBc,gBAqBf4B,EAAS,CACbR,KAAMA,GAAKF,GACXW,KAAMZ,GAAQC,GACdY,IAAG,UAAEZ,SAAF,iBAAE,EAAMH,cAAR,aAAE,EAAce,IACnB9B,UAGUoB,MAAQI,GAClBA,EAAgBI,GA7BG,kBAgCdA,GAhCc,yDAAH,wDCPPG,GAAe,yCAAG,WAAOC,GAAP,UAAAP,EAAA,sEAEhBH,IAAQ,kBAAMW,KAAMC,KAAN,UAAcnB,GAAd,kBAAiDiB,KAC5EjF,GAH6B,mFAAH,sDCAfoF,GAAa,yCAAG,uBAAAV,EAAA,sEACdH,IAAQ,kBAAMW,KAAMG,IAAN,UAAarB,GAAb,oBADA,mFAAH,qDCCbsB,GAAc,yCAAG,WAAOC,GAAP,UAAAb,EAAA,sEAEfH,IAAQ,kBAAMW,KAAMC,KAAN,UAAcnB,GAAd,gCAAuDuB,MAChFvF,GAH0B,mFAAH,sDCDdwF,GAAa,yCAAG,WAAOC,GAAP,UAAAf,EAAA,sEAEdH,IAAQ,kBAAMW,KAAMC,KAAN,UAAcnB,GAAd,gBAA+CyB,MAF/C,mFAAH,sDCAbC,GAAoB,yCAAG,uBAAAhB,EAAA,sEAErBH,IAAQ,kBAAMW,KAAMG,IAAN,UAAarB,GAAb,4BAFO,mFAAH,qDCApB2B,GAAuB,yCAAG,WAAOC,GAAP,UAAAlB,EAAA,sEAExBH,IAAQ,kBAAMW,KAAMG,IAAN,UAAarB,GAAb,6CAAmE4B,OAFzD,mFAAH,sDCAvBC,GAAY,yCAAG,uBAAAnB,EAAA,sEAEbH,IAAQ,kBAAMW,KAAMG,IAAN,UAAarB,GAAb,kBAC3BhE,GAH0B,mFAAH,qDCLZ8F,GAAe,WAC1B,MACE,CAAC,6BAEMxE,KAFP,IAGI4B,WAAW,IAHf,6BAMO5B,KANP,IAOI4B,WAAW,IAPf,6BAUO5B,KAVP,IAWI4B,WAAW,IAXf,6BAcO5B,KAdP,IAeI4B,WAAW,IAff,6BAkBO5B,KAlBP,IAmBI4B,WAAW,IAnBf,6BAsBO5B,KAtBP,IAuBI4B,WAAW,IAvBf,6BA0BO5B,KA1BP,IA2BI4B,WAAW,IA3Bf,6BA8BO5B,KA9BP,IA+BI4B,WAAW,IA/Bf,6BAkCO5B,KAlCP,IAmCI4B,WAAW,IAnCf,6BAsCO5B,KAtCP,IAuCI4B,WAAW,IAvCf,6BA0CO5B,KA1CP,IA2CI4B,WAAW,MC9BN6C,GAAQC,aAAwB,CAC3CC,YAAa,QACbC,eAAgBC,cAAO,SAAClH,EAAOmH,GAC7BnH,EAAMgH,YAAcG,KAGtBC,KAAM,EAENC,QAASH,cAAO,SAAClH,EAAOmH,GACtBnH,EAAMoH,KAAOD,KAGfG,QAAST,KACTU,WAAYL,cAAO,SAAClH,EAAO0E,GACrB1E,EAAMsH,QAAQ5C,KAChB1E,EAAMsH,QAAQ5C,GAAOT,WAAY,MAGrCuD,kBAAmBN,cAAO,SAAClH,EAAOmH,GAChC,IAAMM,EAAaZ,KAGfa,EAAoB,GACxB1H,EAAMsH,QAAQK,SAAQ,SAACC,EAAGlD,GACpBkD,EAAE3D,UACJ2D,EAAE3D,WAAY,EAEdyD,EAAkBG,KAAKnD,MAQ3B,IAJA,IAAM5C,EAAMF,EAAU,EAAG,GAIhBgG,EAAI,EAAGA,EAAI9F,EAAK8F,IAAK,CAC5B,IAAMlD,EAAQ9C,EAAU,EAAG8F,EAAkBlF,OAAS,GAChDsF,EAAcJ,EAAkBhD,GAElC+C,EAAWK,KACbL,EAAWK,GAAa7D,WAAY,GAGtCyD,EAAkBK,OAAOrD,EAAO,GAGlC1E,EAAMsH,QAAUG,KAIlBO,cAAe,GACfC,cAAe,GACfC,WAAY,GAKZC,YAAajB,cAAO,SAAClH,EAAOsG,IAEgB,IAAtCtG,EAAMkI,WAAWE,QAAQ9B,KAE3BtG,EAAMkI,WAAWL,KAAKvB,GACRtG,EAAMgI,cAAcK,MAAK,SAAAT,GAAC,OAAIA,EAAEtB,SAAWA,KACnDzC,GAAM,KAEdwC,GAAeC,MAGjBgC,mBAAoBpB,cAAO,SAAClH,EAAOmH,GACjC,IAAMb,EAASa,EAAQb,OACjBiC,EAAQvI,EAAMgI,cAAcK,MAAK,SAAAT,GAAC,OAAIA,EAAEtB,SAAWA,KAEzD,GAAKiC,EAOE,CAIL,IAAMzE,EAAIyE,EAAMC,MAAQD,EAAMzE,EAC1BA,GAAK,KACP9D,EAAMiI,cAAcJ,KAAKvB,GACzBtG,EAAMgI,cAAgBhI,EAAMgI,cAAcS,QAAO,SAAAb,GAAC,OAAIA,EAAEtB,SAAWA,MAEnEiC,EAAMzE,EAAIA,OAf8B,IAAtC9D,EAAMkI,WAAWE,QAAQ9B,KACiB,IAAzCtG,EAAMiI,cAAcG,QAAQ9B,IAG/BtG,EAAMgI,cAAcH,KAAKV,MAiB/BuB,UAAW,GACXC,WAAY,GACZC,gBAAiB,GAEjBC,iBAAkB,GAClBC,kBAAmB,GACnBC,mBAAoB,GAEpBC,oBAAqB,GACrBC,qBAAsB,GAEtBC,SAAS,EACTlD,OAAQ,KAGRmD,SAAUC,cAAM,SAACC,EAASlC,EAASmC,GACjC,OAAOA,EAAQH,cAGjBI,eAAgBrC,cAAO,SAAClH,EAAOmH,GAC7BnH,EAAMkJ,SAAU,KAGlBM,kBAAmBtC,cAAO,SAAClH,EAAOmH,GAChCnH,EAAMsH,QAAUT,KAChB7G,EAAMgI,cAAgB,GACtBhI,EAAMoH,KAAO,EACbpH,EAAMiI,cAAgB,GACtBjI,EAAMkI,WAAa,GACnBlI,EAAMkJ,SAAU,EAChBlJ,EAAMgG,OAAS,KAEfhG,EAAM0I,UAAY,GAClB1I,EAAM2I,WAAa,GACnB3I,EAAM4I,gBAAkB,GAExB5I,EAAM6I,iBAAmB,GACzB7I,EAAM8I,kBAAoB,GAC1B9I,EAAM+I,mBAAqB,GAE3B/I,EAAMgJ,oBAAsB,GAC5BhJ,EAAMiJ,qBAAuB,MAI/BQ,UAAWvC,cAAO,SAAClH,EAAOmH,GACxBnH,EAAMgG,OAASmB,KAGjBuC,WAAYxC,cAAO,SAAClH,EAAOmH,GACzB,IAAMwC,EAAM,GACNC,EAAO,GAEbzC,EAAQQ,SAAQ,SAAAC,GACd,IAAMiC,EAAKjC,EAAEjB,SACbgD,EAAI9B,KAAKgC,GACTD,EAAKC,GAAMjC,KAGb5H,EAAM0I,UAAYiB,EAClB3J,EAAM2I,WAAaiB,KAGrBE,kBAAmB5C,cAAO,SAAClH,EAAOmH,GAAa,IAAD,IACtCwC,EAAM,GACNC,EAAO,GACPG,EAAY,GACZC,EAAI,UAAGhK,EAAMgG,cAAT,aAAG,EAAcW,SACrBsD,EAAK,UAAGjK,EAAMgG,cAAT,aAAG,EAAckE,YAE5B/C,EAAQQ,SAAQ,SAAAC,GACd,IAAMiC,EAAKjC,EAAEtB,OACbqD,EAAI9B,KAAKgC,GACTD,EAAKC,GAAMjC,GAEG,IAAVqC,GAAerC,EAAEuC,eAAiBH,GAEjB,IAAVC,GAAerC,EAAEwC,aAAeJ,IADzCD,EAAUlC,KAAKgC,MAMnB7J,EAAM0I,UAAYiB,EAClB3J,EAAM2I,WAAaiB,EACnB5J,EAAM+I,mBAAqBgB,KAG7BM,qBAAsBnD,cAAO,SAAClH,EAAOmH,GACnC,IAAMwC,EAAM,GACNC,EAAO,GAEbzC,EAAQQ,SAAQ,SAAAC,GACd,IAAMiC,EAAKjC,EAAEtB,OACbqD,EAAI9B,KAAKgC,GACTD,EAAKC,GAAL,gBAAgBjC,MAIlB5H,EAAMgJ,oBAAsBW,EAC5B3J,EAAMiJ,qBAAuBW,KAG/BU,UAAWlB,aAAK,yCAAC,WAAOC,EAASlC,EAASmC,GAAzB,gBAAA7D,EAAA,6DACf4D,EAAQG,oBADO,SAEIzD,GAAgBoB,GAFpB,WAETjC,EAFS,QAGLE,KAHK,wDAIfiE,EAAQI,UAAUvE,EAAKW,MAJR,kBAKRX,EAAKW,MALG,2CAAD,2DAShB0E,YAAanB,aAAK,yCAAC,WAAOC,EAASlC,EAASmC,GAAzB,gBAAA7D,EAAA,sEACEU,KADF,YACXjB,EADW,QAERE,KAFQ,uBAGfiE,EAAQK,WAAWxE,EAAKW,MAHT,kBAIRX,EAAKW,MAJG,2CAAD,2DAQlB2E,mBAAoBpB,aAAK,yCAAC,WAAOC,EAASlC,EAASmC,GAAzB,gBAAA7D,EAAA,sEACLgB,KADK,QAClBvB,EADkB,QAEfE,OACPiE,EAAQS,kBAAkB5E,EAAKW,MAC/BwD,EAAQoB,yBAJc,2CAAD,2DAQzBC,sBAAuBtB,aAAK,yCAAC,WAAOC,EAASlC,EAASmC,GAAzB,gBAAA7D,EAAA,sEACRiB,GAAwB4C,EAAQH,WAAWnD,OAAOW,UAD1C,QACrBzB,EADqB,QAGlBE,MACPiE,EAAQgB,qBAAqBnF,EAAKW,MAJT,2CAAD,2DAQ5B4E,sBAAuBvD,cAAO,SAAClH,EAAOmH,GAEpC,IAAMwD,EAAY,GAElB3K,EAAM6I,iBAAiBlB,SAAQ,SAAAkC,GAC7B,IAAMrD,EAAOxG,EAAM8I,kBAAkBe,GACrC,GAAIrD,EAAM,CACR,IAAM2D,EAAe3D,EAAK2D,aACpBC,EAAa5D,EAAK4D,WAElBQ,EAAa5K,EAAM2I,WAAWwB,GAC9BU,EAAW7K,EAAM2I,WAAWyB,GAElC,GAAIQ,GAAcC,EAAU,CAC1B,IAAIC,EAAkB,EAClBC,EAAgBvE,EAAKpF,OAErBoF,EAAKpF,OAAS,IAChB0J,EAAkB,KAGfH,EAAUR,GAGbQ,EAAUR,GAAgBQ,EAAUR,GAAgBW,EAFpDH,EAAUR,GAAgBW,EAKvBH,EAAUP,GAGbO,EAAUP,GAAcO,EAAUP,GAAcW,EAFhDJ,EAAUP,GAAcW,OAQhC/K,EAAM4I,gBAAkB+B,KAI1BK,UAAW5B,aAAK,yCAAC,WAAOC,EAASlC,EAASmC,GAAzB,UAAA7D,EAAA,sEACTmB,KADS,OAEfyC,EAAQG,oBAFO,2CAAD,6DC3RlB,GAAqDyB,eAA7CC,GAAR,GAAQA,gBAAiBC,GAAzB,GAAyBA,cAEZC,IAFb,GAAwCC,SAEXH,IAChBI,GAAcH,GCCrB9H,GAAYC,IAAOC,IAAV,gDAIFgI,GAAY,SAAC3L,GAExB,IACEqH,EACEmE,IAAc,SAAA/B,GAAO,OAAIA,KAD3BpC,eAOF,OACE,cAAC,GAAD,UACE,eAACuE,EAAA,EAAKC,IAAN,WACE,cAACD,EAAA,EAAKE,IAAN,CAAUvL,KAAM,IAChB,cAACqL,EAAA,EAAKE,IAAN,CAAUvL,KAAM,EAAhB,SACE,cAACwL,GAAA,EAAD,CACEC,OACE,eAACC,GAAA,EAAD,CAAQtL,OAAO,WAAWJ,KAAK,IAA/B,UACE,cAACwL,GAAA,EAAKG,MAAN,qIACA,cAACH,GAAA,EAAKI,SAAN,CAAe3H,MAAO,CAAE4H,SAAU,QAAlC,oFAGJC,OACE,cAACJ,GAAA,EAAD,CAAQK,eAAe,WAAvB,SACE,eAACC,GAAA,EAAD,CAAQ1H,QAlBE,WACtBwC,EAAe,kBAiB+B1G,OAAO,SAASJ,KAAK,KAAvD,yEACE,cAACiM,EAAA,EAAD,SAVR,SAgBE,eAACZ,EAAA,EAAKC,IAAN,WACE,cAACD,EAAA,EAAKE,IAAN,CAAUvL,KAAM,EAAhB,SACE,cAAC,EAAD,CAAY0D,OAAG6B,EAAW5B,OAAG4B,EAAWzB,WAAW,MAGrD,eAACuH,EAAA,EAAKE,IAAN,CAAUvL,KAAM,EAAhB,UAEE,eAAC,KAAD,CAAGiE,MAAO,CAAE4H,SAAU,OAAQK,WAAY,IAAKC,aAAc,IAA7D,sLACoC,qHADpC,WAC4D,qJAD5D,OAGA,eAAC,KAAD,CAAGlI,MAAO,CAAE4H,SAAU,OAAQK,WAAY,IAAKC,aAAc,IAA7D,UACE,gKADF,6VAIA,eAAC,KAAD,CAAGlI,MAAO,CAAE4H,SAAU,OAAQK,WAAY,IAAKC,aAAc,IAA7D,UACE,0LADF,+fAYR,cAACd,EAAA,EAAKE,IAAN,CAAUvL,KAAM,U,uCC7DlBkD,GAAYC,IAAOC,IAAV,gDAQR,I,MAAMgJ,GAAmB,SAAC3M,GAG/B,IAP6BiC,EAAKC,EAOlC,EAGIsJ,IAAc,SAAA/B,GAAO,OAAIA,KAF3BpC,EADF,EACEA,eACAqD,EAFF,EAEEA,UAGF,EAA4BzK,IAAMC,SAAS,CACzC0M,KAAM,GACNvC,OAd2BpI,EAcG,EAdEC,EAcC,GAb5B2K,KAAKC,MAAMD,KAAK1K,UAAYD,EAAMD,EAAM,GAAKA,IAaV,EAAI,IAAM,OAFpD,mBAAO8K,EAAP,KAAeC,EAAf,KAKA,EAA4B/M,IAAMC,SAAS,CACzC0M,KAAM,GACNvC,MAAO,KAFT,mBAAO4C,EAAP,KAAeC,EAAf,KAKMC,EAAkB,yCAAG,+BAAAtH,EAAA,yDACrBuH,EAAYC,EAAe,QACzBC,EAAaD,EAAe,SAClCH,EAAU,CACRN,KAAMQ,EACN/C,MAAOiD,IAKJF,GAAcE,EAVM,gCAWJ5C,EAAU,CAC3B6C,WAAYR,EAAOH,KACnBtC,YAAa9G,SAASuJ,EAAO1C,SAbR,eAiBrBhD,EAAe,QAAD,OAAS0F,EAAO1C,QAjBT,2CAAH,qDAsBlBgD,EAAiB,SAACT,EAAczM,GACpC,IAAMqN,OAAuB1H,IAAV3F,EAAsBA,EAAQ4M,EAAOH,GAExD,GAAa,SAATA,EAAiB,CAEnB,IAAKY,GAAcA,EAAWC,OAAO7K,OAAS,EAAG,CAC/C,IAAMwB,EAAQ,+MACRsJ,EAAS,6BACVT,GADU,mBAEZL,EAAOxI,IAIV,OAFA8I,EAAUQ,GAEHtJ,EAEP8I,EAAU,6BACLD,GADI,mBAENL,EAAO,WAGP,GAAa,UAATA,EAKT,OAJAM,EAAU,6BACLD,GADI,mBAENL,EAAO,MAEH,IAsBLe,EAAoB,SAACf,EAAMzM,GAC/B,IAAMuN,EAAS,6BACVX,GADU,mBAEZH,EAAOzM,IAGV6M,EAAUU,IAKZ,OACE,cAAC,GAAD,UACE,eAAC9B,EAAA,EAAKC,IAAN,WACE,cAACD,EAAA,EAAKE,IAAN,CAAUvL,KAAM,IAChB,cAACqL,EAAA,EAAKE,IAAN,CAAUvL,KAAM,EAAhB,SACE,cAACwL,GAAA,EAAD,CACEC,OACE,eAACC,GAAA,EAAD,CAAQtL,OAAO,WAAWJ,KAAK,IAA/B,UACE,cAACwL,GAAA,EAAKG,MAAN,sEACA,cAACH,GAAA,EAAKI,SAAN,CAAe3H,MAAO,CAAE4H,SAAU,QAAlC,sbAKJC,OACE,cAACJ,GAAA,EAAD,CAAQK,eAAe,WAAvB,SACE,eAACC,GAAA,EAAD,CAAQ1H,QAASsI,EAAoBxM,OAAO,SAASJ,KAAK,KAA1D,0EACE,cAACqN,GAAA,EAAD,SAZR,SAkBE,cAAChC,EAAA,EAAKC,IAAN,UACE,eAACD,EAAA,EAAKE,IAAN,CAAUvL,KAAM,EAAhB,UAEE,eAACsN,GAAA,EAAD,CAAWtN,KAAK,IAAIiE,MAAO,CAAEkI,aAAc,IAA3C,UACE,cAACmB,GAAA,EAAUC,MAAX,CAAiBC,UAAQ,EAAzB,qEACA,eAACF,GAAA,EAAUG,QAAX,WACE,cAACC,GAAA,EAAD,CACE9N,MAAO4M,EAAOH,KACdsB,OAAQ,kBAAMb,EAAe,SAC7BzM,SAAU,SAACC,GACTwM,EAAe,OAAQxM,EAAEsN,OAAOhO,OAChCwN,EAAkB,OAAQ9M,EAAEsN,OAAOhO,UAGtC8M,EAAOL,MACN,cAACiB,GAAA,EAAUO,QAAX,CAAmBC,MAAM,WAAzB,SAAqCpB,EAAOL,aAMlD,cAACqB,GAAA,EAAD,CACErN,SAAU,SAACC,GACTwM,EAAe,QAASxM,EAAEsN,OAAOhO,OACjCwN,EAAkB,QAAS9M,EAAEsN,OAAOhO,QAEtCA,MAAO4M,EAAO1C,MAAO7F,MAAO,CAAE8J,MAAO,OAAQC,OAAQ,MAAOC,QAAS,kBA0C/E,cAAC5C,EAAA,EAAKE,IAAN,CAAUvL,KAAM,U,SC/LlBkD,GAAYC,IAAOC,IAAV,+WAsBF8K,GAAQ,SAACzO,GAEpB,MAGI0L,IAAY,SAAAtL,GAAK,OAAIA,KADvBsH,GAFF,EACEtB,OADF,EAEEsB,SAGF,EAGI8D,IAAc,SAAA/B,GAAO,OAAIA,KAE7B,GALA,EACEpC,eADF,EAEEqD,UC/BoB,WACtB,MAGIgB,IAAY,SAAAtL,GAAK,OAAIA,KAFvBgG,EADF,EACEA,OACAsB,EAFF,EAEEA,QAGF,EAMI8D,IAAc,SAAA/B,GAAO,OAAIA,KAH3BkB,GAHF,EACEtD,eADF,EAEEqD,UAFF,EAGEC,aACA/C,EAJF,EAIEA,kBACAD,EALF,EAKEA,WAGF,EAAwC1H,IAAMC,UAAS,GAAvD,mBAAOwO,EAAP,KAAqBC,EAArB,KAGA,EAA8BC,aAC5B,oBACA,CACEC,OAAQ,IACRC,MAAO,WACLH,GAAgB,MALtB,mBAAOI,EAAP,UAAoBC,KAapB/O,IAAMgP,WAAU,WAGd,OAAO,eAIN,IAIH,IAAMC,EAAQjP,IAAMkP,OAAO,MAI3BlP,IAAMgP,WAAU,WACd,IAAMG,EAAIC,YAAW,WAEnBH,EAAMI,QAAUC,aAAY,WAC1B3H,MAEC,QACF,KAEH,OAAO,WACDwH,GAAGI,aAAaJ,GAChBF,EAAMI,SACRG,cAAcP,EAAMI,YAGvB,IAEH,MAAoBV,aAClB,oBACA,CACEC,OAAQ,GACRa,WAAW,IAJRC,EAAP,oBAQA,EAA8C1P,IAAMC,SAAS,GAA7D,mBAAO0P,EAAP,KAAwBC,EAAxB,KA0CA,MAAO,CACLnB,eACAC,kBACAI,YACArH,UACA7C,QA7CW,yCAAG,WAAOC,GAAP,sBAAAe,EAAA,6DAEd8J,IAIAhI,EAAW7C,GAGLpC,EAASgF,EAAQ5C,GATT,SAUM6F,IAVN,UAYdmF,GAFIA,EAVU,QAYIjH,QAAO,SAAAb,GAAC,OAAsB,IAAlBA,EAAEsC,eAE5BE,EAAa,OAdH,UAgBVsF,SAhBU,aAgBV,EAASlN,QAhBC,wBAiBRgN,GAAmBE,EAAQlN,QAC7B4H,EAAasF,EAAQ,GAAG/I,SACxB8I,EAAmB,KAEnBrF,EAAasF,EAAQF,GAAiB7I,SACtC8I,EAAmBD,EAAkB,IAtB3B,UAyBNjJ,GAAc,CAClB4D,aAAcnE,EAAOW,SACrByD,aACAxH,OAAQN,EAAOM,OACfC,OAAQP,EAAOO,OACfzB,OAAQkB,EAAOlB,OACfkB,OAAQA,EAAOA,OACfU,WAAYV,EAAOU,WACnB2M,WAAW,IAjCD,4CAAH,uDDhCTC,IALFtB,EADF,EACEA,aACAC,EAFF,EAEEA,gBACAI,EAHF,EAGEA,UAEAlK,EALF,EAKEA,QAgBF,OACE,cAAC,GAAD,CAAWA,QAbO,SAAChE,GAEd6N,IACHC,GAAgB,GAChBI,MASF,SAEGrH,EAAQ9E,QAAU,IACjB,qCACE,cAAC,EAAD,CACEiC,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,GACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,IACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,IACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,IACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,KACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,GACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,IACHC,EAAG,MAIL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,IACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,IACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,EACP1B,WAAYsE,EAAQ,GAAGtE,WACvBiB,UAAWqD,EAAQ,GAAGrD,UACtBJ,EAAG,IACHC,EAAG,MAGL,cAAC,EAAD,CACEW,QAASA,EACTC,MAAO,GACP1B,WAAYsE,EAAQ,IAAItE,WACxBiB,UAAWqD,EAAQ,IAAIrD,UACvBJ,EAAG,KACHC,EAAG,YEjKT+L,GAAa,CACjB,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAc9CC,GAAiB,SAAClI,EAAGR,GACzB,OpB2DA2I,EoB3D2BnI,EAAE/D,EpB2DfmM,EoB3DkBpI,EAAE9D,EpB2DNmM,EoB3DSrI,EAAE/D,EAAI,GpB2DDqM,EoB3DKtI,EAAE9D,EAAI,GpB4DvCqM,EoB3DN,IpB2DoBC,EoB3DfhJ,EAAO,GpB2DsBiJ,EoB3DlB,MpB4DPJ,EoB5Df7I,GpB6DgB2I,EAAQK,GACVJ,EAAQK,GACRH,EAAQC,GANS,IACjCJ,EAAcC,EAAcC,EAAcC,EAC5BC,EAAcC,EAAcC,GoBxD/BC,GAAW,WACtB,MAOIhF,IAAY,SAAAtL,GAAK,OAAIA,KANvBoH,EADF,EACEA,KAKAc,GANF,EAEElC,OAFF,EAGEgC,cAHF,EAIEgB,oBAJF,EAKEC,qBALF,EAMEf,YAGF,EAQIkD,IAAc,SAAA/B,GAAO,OAAIA,KAP3BF,EADF,EACEA,SAGAb,GAJF,EAEErB,eAFF,EAGEqD,UAHF,EAIEhC,oBACAoC,EALF,EAKEA,sBACArD,EANF,EAMEA,QACAc,EAPF,EAOEA,YAGIoI,EAAa1Q,IAAMkP,OAAO,MAC1ByB,EAAe3Q,IAAMkP,OAAO,MAClC,EAAwClP,IAAMC,UAAS,GAAvD,mBAAOwO,EAAP,KAAqBC,EAArB,KACA,EAA4C1O,IAAMC,UAAS,GAA3D,mBAAuB2Q,GAAvB,WAGA,EAAoBjC,aAClB,oBACA,CACEC,OAAQ,GACRa,WAAW,EACXZ,MAAO,WACL+B,GAAkB,MANjBlB,EAAP,oBAWA,EAA8Bf,aAC5B,oBACA,CACEC,OAAQ,IACRC,MAAO,WAELH,GAAgB,MANtB,mBAAOI,EAAP,KAgBM+B,GAhBN,KAAoB9B,KAgBF,WAChB,MAA2EzF,IAAnE/B,EAAR,EAAQA,KAAM4B,EAAd,EAAcA,oBAAqBC,EAAnC,EAAmCA,qBAAnC,EAAyDjB,cAE3CL,SAAQ,SAAAC,GACAkI,GAAelI,EAAGR,KAGhCQ,EAAExG,QAAU,EACdD,EAAayG,EAAExG,QACNwG,EAAExG,OAAS,GACpBI,EAAYoG,EAAExG,QAGhB+G,EAAYP,EAAEtB,QACdmK,GAAkB,OAKtBzH,EAAoBrB,SAAQ,SAAAkC,GAC1BvB,EAzFuB,SAAChC,EAAQlF,GACpC,IAAMuP,EAAY/O,EAAU,EAAGiO,GAAWrN,OAAS,GACnD,MAAO,CACL8D,SACAxC,GAAI,IACJD,EAAGgM,GAAWc,GACdnI,MAAO5G,EAAU,GAAI,IACrBR,UAkFqBwP,CAAqB/G,EAAIZ,EAAqBY,GAAIzI,cAKzEvB,IAAMgP,WAAU,WAOd,OALA2B,EAAatB,QAAUC,aAAY,WAEjCuB,MACC,KAEI,WACLrB,cAAcmB,EAAatB,YAE5B,IAEHrP,IAAMgP,WAAU,WAMd,OAJA0B,EAAWrB,QAAUC,YAAW,wBAAC,uBAAA1J,EAAA,sEACzBiF,IADyB,2CAE9B,KAEI,WAEL2E,cAAckB,EAAWrB,YAG1B,IAyCH,MAAO,CAIL2B,YAxCkB,SAACpQ,GACnB,MAAgD0I,IAAxCnB,EAAR,EAAQA,cAAeiB,EAAvB,EAAuBA,qBAElBqF,IACHvK,QAAQ+M,IAAI,eAAgBxC,GAC5BC,GAAgB,GAChBI,KAGF3G,EAAcL,SAAQ,SAAAC,GACpB,IAAMmJ,EAAcjB,GAAelI,EAAGR,GAEtC,GADArD,QAAQ+M,IAAI,cAAeC,EAAanJ,GACpCmJ,EAAa,CACF9H,EAAqBrB,EAAEtB,QAEhCsB,EAAExG,QAAU,EACdD,EAAayG,EAAExG,QACNwG,EAAExG,OAAS,GACpBI,EAAYoG,EAAExG,QAEhB+G,EAAYP,EAAEtB,SAEwB,IAAlC4B,EAAWE,QAAQR,EAAEtB,UACvBmK,GAAkB,GAClBlB,SAMF9O,EAAEuQ,OAAS,MACb3J,EAAQ5G,EAAEuQ,QAUZ5J,SCnKE/D,GAAYC,IAAOC,IAAV,uUAsBF0N,GAAQ,SAACrR,GAEpB,MAKI0L,IAAY,SAAAtL,GAAK,OAAIA,KAHvBgI,GAFF,EACEhC,OADF,EAEEgC,eAEAiB,GAJF,EAGED,oBAHF,EAIEC,sBAGF,EAGImC,IAAc,SAAA/B,GAAO,OAAIA,KAE7B,GALA,EACEpC,eADF,EAEEqD,UAQEgG,MAJFlJ,EADF,EACEA,KAEAyJ,EAHF,EAGEA,YAiBF,OACE,qBAAKzM,MAAO,CAAE8J,MAAO,OAAQgD,OAAQ,QAAUL,YAAaA,EAA5D,SACE,eAAC,GAAD,WAEE,cAAC,EAAD,CAAKhN,EAAGuD,IAEPY,EAAcrH,KAAI,SAAAwQ,GAGjB,IAAM3K,EAAOyC,EAAqBkI,EAAI7K,QAEtC,OAAK6K,GAAQ3K,EAKX,cAAC,EAAD,CAEEqD,GAAIrD,EAAKF,OACTnC,OAAQqC,EAAKlE,OACbU,WAAYwD,EAAKxD,WACjBJ,OAAQ4D,EAAK5D,OACbC,OAAQ2D,EAAK3D,OACbgB,EAAGsN,EAAItN,EACPC,EAAGqN,EAAIrN,GAPF0C,EAAKF,QANY,cCvDrB8K,OAjBf,WACE,IACEpK,EACEsE,IAAY,SAAAtL,GAAK,OAAEA,KADrBgH,YAEF,OACE,gCACE,cAAC,EAAD,IACiB,UAAhBA,GAA2B,cAAC,GAAD,IACX,kBAAhBA,GAAmC,cAAC,GAAD,IACnB,WAAhBA,GAA4B,cAAC,GAAD,IACZ,WAAhBA,GAA4B,cAAC,GAAD,IAE7B,cAACqK,EAAA,EAAD,CAAeC,QAASzQ,EAAO0Q,MAAO,EAAIC,OAAO,MAAMlR,MAAM,c,UCjBjE2F,KAAMwL,SAASC,QAAQxL,KAAK,gBAAkB,iCCOhDyL,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,GAAA,EAAD,UACA,cAAC,KAAD,CAAehL,MAAOA,GAAtB,SACE,cAAC,GAAD,UAIJiL,SAASC,eAAe,W","file":"static/js/main.7767a467.chunk.js","sourcesContent":["import { Close } from '@fcc/icons';\nimport { Button, Grid, Groups, Header, P } from '@fcc/ui';\nimport React from 'react';\nimport { showBadLead } from 'src/utils';\n\n\nexport const NavigationBar = (props) => {\n  const items = [\n    { value: 'game', label: 'Игра' },\n    // { value: 'players', label: 'Пользователи' },\n    // { value: 'score', label: 'Зал славы' },\n  ]\n  const [state, setState] = React.useState({ value: 'game' })\n  const handleChange = (e, value) => setState({ value })\n\n  //showBadLead(100);\n  return (\n    <Header\n      size=\"s\"\n      items={\n        <Header.Items\n          align=\"center\"\n          design=\"primary\"\n          onChange={handleChange}\n          value={state.value}\n        >\n          {items.map(({ value, label }) => (\n            <Header.Item key={value} value={value} label={label} />\n          ))}\n        </Header.Items>\n      }\n    />\n  )\n}","import { NotificationService } from \"@fcc/ui\";\nimport { formatNumberString, convertNumberToString } from '@fcc/utils'\n\nexport const toast = new NotificationService();\n\n\nexport const showApiBad = () => {          \n  toast.warning({\n    title: 'Что-то пошло не так',\n    message: 'API стало плохо',\n      \n  })\n}\n\nexport const showGoodLead = (profit) => {          \n  toast.success({    \n    message: `Вы заработали: ${convertNumberToString(profit)}`,\n    delay: 1200,\n      \n  })\n}\n\nexport const showBadLead = (profit) => {          \n  toast.warning({    \n    message: `Вы потеряли: -${convertNumberToString(profit)}`,\n    delay: 1200,\n      \n  })\n}\n\n","import * as _ from 'lodash'\n\nexport const runDebounced = _.debounce((callback) => {\n\n  callback();\n}, 250, {leading: true});\n\nexport const runDebouncedQuick = _.debounce((callback) => {\n\n  callback();\n}, 50, {leading: true});","import random from '@aspiesoft/random-number-js';\n\n\nexport const getRandom = (min:number, max:number) => {    \n  return random(min, max);\n}\n\nexport const getRandomClassic = (min:number, max:number) => {  \n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  return Math.round(rand);\n}","import { getRandom } from \".\";\n\nconst noses = ['nose1.png',\n  'nose2.png',\n  'nose3.png',\n  'nose4.png',\n  'nose5.png',\n  'nose6.png',\n  'nose7.png'];\n\nconst mouths = [\n  'mouth1.png',\n  'mouth2.png',\n  'mouth3.png',\n  'mouth4.png',\n  'mouth5.png',\n  'mouth6.png',\n  'mouth7.png'\n];\n\nconst eyes = [\n  'eye1.png',\n  'eye2.png',\n  'eye3.png',\n  'eye4.png',\n  'eye5.png',\n  'eye6.png',\n  'eye7.png'\n];\n\nconst eyebrows = [\n  'eb1.png',\n  'eb2.png',\n  'eb3.png',\n  'eb4.png',\n  'eb5.png',\n  'eb6.png',\n  'eb7.png'\n];\n\nconst professions = ['архитектор', 'безработный', 'бухгалтер', 'водитель', 'военный', 'врач', 'генеральный директор', 'главврач', 'дворник', 'дизайнер', 'инженер', 'кассир', 'копирайтер', 'маркетолог', 'медбрат', 'менеджер', 'научный сотрудник', 'охранник', 'пекарь', 'предприниматель', 'преподаватель', 'программист', 'ректор', 'риэлтор', 'сварщик', 'сотрудник МВД', 'строитель', 'студент', 'торговый представитель', 'фрилансер', 'юрист']\n\nexport const generateAvatar = () => {\n\n  const avatar = {\n    eyebrowsIndex: getRandom(0, eyebrows.length-1),\n    eyesIndex: getRandom(0, eyes.length-1),\n    noseIndex: getRandom(0, noses.length-1),\n    mouthIndex: getRandom(0, mouths.length-1),\n  };\n\n  let salary = getRandom(11000, 300000);\n  let amount = getRandom(1, 11) <= 4  ? (salary * 18 ) : salary * getRandom(6, 9);\n  let profit = salary * 10 > amount ? amount * -0.01 : amount * 0.01;\n\n  //console.log(profit)\n\n  return {\n    eyebrows: eyebrows[avatar.eyebrowsIndex],\n    eyes: eyes[avatar.eyesIndex],\n    nose: noses[avatar.noseIndex],\n    mouth: mouths[avatar.mouthIndex],\n    avatar: `${avatar.eyebrowsIndex}-${avatar.eyesIndex}-${avatar.noseIndex}-${avatar.mouthIndex}`,\n    profession: professions[getRandom(0, 30)],\n    salary,\n    amount,\n    profit\n\n  }\n}\n\nexport const parseAvatar = (avatar) => {\n  const parts = avatar.split('-');\n\n  return {\n    eyebrows: eyebrows[parseInt(parts[0])],\n    eyes: eyes[parseInt(parts[1])],\n    nose: noses[parseInt(parts[2])],\n    mouth: mouths[parseInt(parts[3])],\n  }\n\n}\n\nexport const rectanglesIntersect = ( \n  minAx:number, minAy:number, maxAx:number, maxAy:number,\n  minBx:number, minBy:number, maxBx:number, maxBy:number ) => {\n  const aLeftOfB = maxAx < minBx;\n  const aRightOfB = minAx > maxBx;\n  const aAboveB = minAy > maxBy;\n  const aBelowB = maxAy < minBy;\n\n  return !( aLeftOfB || aRightOfB || aAboveB || aBelowB );\n}\n","import { Close } from '@fcc/icons';\nimport { Button, Grid, Groups, P } from '@fcc/ui';\nimport React from 'react';\nimport { generateAvatar, parseAvatar } from 'src/utils';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\nwidth: 152px;\nheight: 152px;\nposition: absolute;\n\nborder-radius: 50%;\ncursor: pointer;\n\n&:hover {\n  background: #FED500;\n  transform: rotate(-2deg);\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 4px 20px 0px;\n}\nuser-select: none;\n`\n\nconst Img = styled.img`\nwidth: 128px;\nheight: 128px;\ntop: 12px;\nleft: 12px;\nposition: absolute;\nuser-select: none;\n`\n\nconst Caption = styled.div`\nwidth: 200px;\nposition: absolute;\npadding: 4px;\nuser-select: none;\ntext-align: center;\nline-height: 1.2;\nfont-weight: 700;\ntext-shadow: 2px 2px 2px #fff;\n`\n\nconst rootUrl = '/demogame/img/game-assets/faces';\n\nexport const GameAvatar = (props) => {\n\n  if (!props.x || !props.y) {\n    console.error('err', props)\n  }\n\n  //const avatar = props.avatar;\n  const isVisible = props.isVisible ? true : false;\n\n  let avatarImg = props.string ? parseAvatar(props.string) : generateAvatar();\n\n  const handleClick = () => {\n    if (props.onClick) {\n      props.onClick(props.index);\n    }\n  }\n\n  const style: any = {\n    display: isVisible ? 'block' : 'none'\n  }\n\n  if (props.x && props.y) {\n    style.x = props.x;\n    style.y = props.y;\n  }\n\n\n  return (\n    <>\n\n      <Container\n        style={{\n          left: props.x || 'unset', top: props.y || 'unset',\n          display: isVisible ? 'block' : 'none'\n        }}\n        onMouseDown={handleClick}>\n\n        <Img alt=\"\" src={`${rootUrl}/face.png`} />\n        <Img alt=\"\" src={`${rootUrl}/${avatarImg.eyebrows}`} />\n        <Img alt=\"\" src={`${rootUrl}/${avatarImg.eyes}`} />\n        <Img alt=\"\" src={`${rootUrl}/${avatarImg.nose}`} />\n        <Img alt=\"\" src={`${rootUrl}/${avatarImg.mouth}`} />\n      </Container>\n      <Caption\n        style={{\n          left: props.x - 20, top: props.y + 145,\n          display: isVisible ? 'block' : 'none'\n        }}>\n        {props.profession}\n      </Caption>\n    </>\n  )\n}","import { Close } from '@fcc/icons';\nimport { Button, Grid, Groups, P } from '@fcc/ui';\nimport { convertNumberToString, formatNumberString } from '@fcc/utils';\nimport React from 'react';\nimport { generateAvatar, parseAvatar } from 'src/utils';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\nwidth: 152px;\nheight: 152px;\nposition: absolute;\n\nborder-radius: 50%;\n\n\nuser-select: none;\n`\n\nconst Img = styled.img`\nwidth: 96px;\nheight: 96px;\ntop: 12px;\nleft: 12px;\nposition: absolute;\nuser-select: none;\n\n`\n\nconst Caption = styled.div`\nwidth: 160px;\nposition: absolute;\npadding: 4px;\nuser-select: none;\n\nfont-size:12px;\ntext-align: center;\nline-height: 1.15;\nfont-weight: 700;\ntext-shadow: 2px 2px 2px #fff;\n\n`\n\nconst rootUrl = '/demogame/img/game-assets/faces';\n\nexport const GameAvatar2 = (props) => {\n\n  //const avatar = props.avatar;\n\n\n  let avatarImg = props.string ? parseAvatar(props.string) : generateAvatar();\n\n  const handleClick = () => {\n    if (props.onClick) {\n      props.onClick(props.index);\n    }\n  }\n\n\n\n  return (\n    <>\n\n      <Container\n      style={{left: props.x, top: props.y }}\n       onClick={handleClick}>\n\n        <Img alt=\"\" src={`${rootUrl}/face.png`} />\n        <Img alt=\"\" src={`${rootUrl}/${avatarImg.eyebrows}`} />\n        <Img alt=\"\" src={`${rootUrl}/${avatarImg.eyes}`} />\n        <Img alt=\"\" src={`${rootUrl}/${avatarImg.nose}`} />\n        <Img alt=\"\" src={`${rootUrl}/${avatarImg.mouth}`} />\n      </Container>\n      <Caption\n        style={{left: props.x-0, top: props.y+105\n          }}>\n            {props.profession}<br/>\n           кредит: {convertNumberToString(props.amount)}₽<br/>\n           Зп: {convertNumberToString(props.salary)}₽\n        </Caption>\n    </>\n  )\n}\n","import { Close } from '@fcc/icons';\nimport { Button, Grid, Groups, P } from '@fcc/ui';\nimport React from 'react';\nimport { generateAvatar, parseAvatar } from 'src/utils';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\nwidth: 152px;\nheight: 152px;\nposition: absolute;\n\nborder-radius: 50%;\n\ntransform: rotate(-5deg);\nuser-select: none;\ntop: 570px;\nleft: 0px;\n`\n\nconst Img = styled.img`\nwidth: 96px;\nheight: 96px;\nposition: absolute;\nuser-select: none;\n\n`\n\n\nconst rootUrl = '/demogame/img/game-assets/';\n\nexport const Bag = (props) => {\n\n\n\n  return (\n    <>\n\n      <Container\n        style={{ left: props.x }}\n      >\n\n        <Img alt=\"\" src={`${rootUrl}/bag.png`} />\n\n\n      </Container>\n    </>\n  )\n}","export const config = {  \n  backendUrl: process.env.REACT_APP_BACKEND_REST_ROOT  \n}","const getResp = (resp) => {\n  return resp?.data?.data ? resp?.data?.data : resp?.data\n}\n\nconst isOk = (resp) => {\n  if (!resp) return false;\n\n  if (resp.status === 200 || resp.status === 302) {\n    return true\n  }\n\n  return false;\n}\n\nexport const callApi = async ( callFn, errorCallBackFn?):Promise<{\n  isOk: boolean,\n  body?:any,\n  url: string,\n  error?:any\n}> => {\n\n\n  \n\n  let resp = null;\n  let error = undefined;\n\n\n  try {\n    resp = await callFn();    \n  }catch (err) {\n    resp = err.response;\n    error = err;\n  }\n\n  const result = {\n    isOk: isOk(resp),\n    body: getResp(resp),\n    url: resp?.config?.url,\n    error\n  }\n\n  if (!result.isOk && errorCallBackFn) {\n    errorCallBackFn(result)\n  }\n\n  return result\n}","import axios from \"axios\"\nimport { config } from \"src/config\"\nimport { showApiBad } from \"src/utils\"\nimport { callApi } from \"../callApi\"\nimport { ApiResp, Player } from \"../model\"\n\n\nexport const createPlayerApi = async (player: Player):Promise<ApiResp<Player>> => {\n  \n  return await callApi(() => axios.post(`${config.backendUrl}/create-player`, player),\n  showApiBad)\n}","import axios from \"axios\"\nimport { config } from \"src/config\"\nimport { showApiBad } from \"src/utils\"\nimport { callApi } from \"../callApi\"\nimport { ApiResp, Player } from \"../model\"\n\n\nexport const getPlayersApi = async ():Promise<ApiResp<Player[]>> => {  \n  return await callApi(() => axios.get(`${config.backendUrl}/get-players`))\n}","import axios from 'axios';\nimport { config } from 'src/config';\nimport { showApiBad } from 'src/utils';\n\nimport { callApi } from '../callApi';\nimport { ApiResp, Lead, Player } from '../model';\n\n\nexport const confirmLeadApi = async (leadId: string): Promise<ApiResp<Lead>> => {\n\n  return await callApi(() => axios.post(`${config.backendUrl}/confirm-lead?leadId=${leadId}`),\n    showApiBad)\n}","import axios from \"axios\"\nimport { config } from \"src/config\"\nimport { showApiBad } from \"src/utils\"\nimport { callApi } from \"../callApi\"\nimport { ApiResp, Lead, Player } from \"../model\"\n\n\nexport const createLeadApi = async (lead: Lead):Promise<ApiResp<Lead[]>> => {\n  \n  return await callApi(() => axios.post(`${config.backendUrl}/create-lead`, lead))\n}","import axios from \"axios\"\nimport { config } from \"src/config\"\nimport { showApiBad } from \"src/utils\"\nimport { callApi } from \"../callApi\"\nimport { ApiResp, Lead, Player } from \"../model\"\n\n\nexport const getConfirmedLeadsApi = async ():Promise<ApiResp<Lead[]>> => {\n  \n  return await callApi(() => axios.get(`${config.backendUrl}/get-confirmed-leads`))\n}","import axios from \"axios\"\nimport { config } from \"src/config\"\nimport { showApiBad } from \"src/utils\"\nimport { callApi } from \"../callApi\"\nimport { ApiResp, Lead, Player } from \"../model\"\n\n\nexport const getNotConfirmedLeadsApi = async (playerId: string):Promise<ApiResp<Lead[]>> => {\n  \n  return await callApi(() => axios.get(`${config.backendUrl}/get-not-confirmed-leads?playerId=${playerId}`))\n}","import axios from \"axios\"\nimport { config } from \"src/config\"\nimport { showApiBad } from \"src/utils\"\nimport { callApi } from \"../callApi\"\nimport { ApiResp, Player } from \"../model\"\n\n\nexport const clearGameApi = async ():Promise<ApiResp<any>> => {\n  \n  return await callApi(() => axios.get(`${config.backendUrl}/clear-game`),\n  showApiBad)\n}","import { generateAvatar } from \"src/utils\"\n\nexport const buildAvatars = () => {\n  return (\n    [\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      },\n      {\n        ...generateAvatar(),\n        isVisible: false,\n      }\n    ]\n  )\n}","import { action, createStore, thunk } from 'easy-peasy';\nimport * as _ from 'lodash/fp';\nimport {\n  clearGameApi,\n  confirmLeadApi,\n  createPlayerApi,\n  getConfirmedLeadsApi,\n  getNotConfirmedLeadsApi,\n  getPlayersApi,\n} from 'src/api';\nimport { getRandom, showBadLead, showGoodLead } from 'src/utils';\n\nimport { buildAvatars } from './lib';\nimport { StoreModel } from './model';\n\nconst avatarPositions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport const store = createStore<StoreModel>({\n  currentPage: 'rules', //'game-1',\n  setCurrentPage: action((state, payload) => {\n    state.currentPage = payload;\n  }),\n\n  bagX: 0,\n\n  setBagX: action((state, payload) => {\n    state.bagX = payload;\n  }),\n\n  avatars: buildAvatars(),\n  hideAvatar: action((state, index) => {\n    if (state.avatars[index]) {\n      state.avatars[index].isVisible = false;\n    }\n  }),\n  regenerateAvatats: action((state, payload) => {\n    const newAvatars = buildAvatars();\n\n    //const visibleIndexes = [];\n    let notVisibleIndexes = [];\n    state.avatars.forEach((i, index) => {\n      if (i.isVisible) {\n        i.isVisible = false;\n      } else {\n        notVisibleIndexes.push(index)\n      }\n    })\n\n    const max = getRandom(2, 6);\n\n\n    //\n    for (let i = 0; i < max; i++) {\n      const index = getRandom(0, notVisibleIndexes.length - 1);\n      const avatarIndex = notVisibleIndexes[index];\n\n      if (newAvatars[avatarIndex]) {\n        newAvatars[avatarIndex].isVisible = true;\n      }\n\n      notVisibleIndexes.splice(index, 1);\n\n    }\n    state.avatars = newAvatars;\n\n  }),\n\n  leadPositions: [],\n  hiddenLeadIds: [],\n  catchedIds: [],\n\n\n\n\n  catchLeadId: action((state, leadId) => {\n\n    if (state.catchedIds.indexOf(leadId) === -1) {\n\n      state.catchedIds.push(leadId);\n      const found = state.leadPositions.find(i => i.leadId === leadId);\n      found.x = - 400;\n    }\n    confirmLeadApi(leadId)\n  }),\n\n  updateLeadPosition: action((state, payload) => {\n    const leadId = payload.leadId;\n    const found = state.leadPositions.find(i => i.leadId === leadId);\n    //console.log('found', JSON.stringify(found || {}))\n    if (!found) {\n      if (state.catchedIds.indexOf(leadId) === -1\n        && state.hiddenLeadIds.indexOf(leadId) === -1\n        // && state.leadPositions.length < 3\n      ) {\n        state.leadPositions.push(payload)\n      }\n    } else {\n\n\n\n      const y = found.speed + found.y\n      if (y >= 540) {\n        state.hiddenLeadIds.push(leadId)\n        state.leadPositions = state.leadPositions.filter(i => i.leadId !== leadId)\n      } else {\n        found.y = y;\n      }\n\n    }\n  }),\n\n  playerIds: [],\n  playerById: {},\n  scoreByPlayerId: {},\n\n  confirmedLeadIds: [],\n  confirmedLeadById: {},\n  myConfrimedLeadIds: [],\n\n  nonConfirmedLeadIds: [],\n  nonConfirmedLeadById: {},\n\n  isReady: false,\n  player: null,\n\n\n  getState: thunk((actions, payload, helpers) => {\n    return helpers.getState();\n  }),\n\n  setGameIsReady: action((state, payload) => {\n    state.isReady = true;\n  }),\n\n  setGameIsNotReady: action((state, payload) => {\n    state.avatars = buildAvatars();\n    state.leadPositions = [];\n    state.bagX = 0;\n    state.hiddenLeadIds = [];\n    state.catchedIds = [];\n    state.isReady = false;\n    state.player = null;\n\n    state.playerIds = [];\n    state.playerById = {};\n    state.scoreByPlayerId = {};\n\n    state.confirmedLeadIds = [];\n    state.confirmedLeadById = {};\n    state.myConfrimedLeadIds = [];\n\n    state.nonConfirmedLeadIds = [];\n    state.nonConfirmedLeadById = {};\n\n  }),\n\n  setPlayer: action((state, payload) => {\n    state.player = payload;\n  }),\n\n  setPlayers: action((state, payload) => {\n    const ids = [];\n    const byId = {};\n\n    payload.forEach(i => {\n      const id = i.playerId;\n      ids.push(id);\n      byId[id] = i\n    })\n\n    state.playerIds = ids;\n    state.playerById = byId;\n  }),\n\n  setConfirmedLeads: action((state, payload) => {\n    const ids = [];\n    const byId = {};\n    const myLeadIds = [];\n    const myId = state.player?.playerId;\n    const group = state.player?.playerGroup;\n\n    payload.forEach(i => {\n      const id = i.leadId;\n      ids.push(id);\n      byId[id] = i\n\n      if (group === 1 && i.fromPlayerId === myId) {\n        myLeadIds.push(id)\n      } else if (group === 2 && i.toPlayerId === myId) {\n        myLeadIds.push(id)\n      }\n    })\n\n    state.playerIds = ids;\n    state.playerById = byId;\n    state.myConfrimedLeadIds = myLeadIds;\n  }),\n\n  setNonConfirmedLeads: action((state, payload) => {\n    const ids = [];\n    const byId = {};\n\n    payload.forEach(i => {\n      const id = i.leadId;\n      ids.push(id);\n      byId[id] = { ...i }\n    })\n\n    //console.log(byId)\n    state.nonConfirmedLeadIds = ids;\n    state.nonConfirmedLeadById = byId;\n  }),\n\n  startGame: thunk(async (actions, payload, helpers) => {\n    actions.setGameIsNotReady();\n    const resp = await createPlayerApi(payload);\n    if (!resp.isOk) return;\n    actions.setPlayer(resp.body);\n    return resp.body;\n\n  }),\n\n  loadPlayers: thunk(async (actions, payload, helpers) => {\n    const resp = await getPlayersApi();\n    if (resp.isOk) {\n      actions.setPlayers(resp.body)\n      return resp.body;\n    }\n  }),\n\n  loadConfirmedLeads: thunk(async (actions, payload, helpers) => {\n    const resp = await getConfirmedLeadsApi();\n    if (resp.isOk) {\n      actions.setConfirmedLeads(resp.body)\n      actions.calculatePlayersScore();\n    }\n  }),\n\n  loadNonConfirmedLeads: thunk(async (actions, payload, helpers) => {\n    const resp = await getNotConfirmedLeadsApi(helpers.getState().player.playerId);\n\n    if (resp.isOk) {\n      actions.setNonConfirmedLeads(resp.body)\n    }\n  }),\n\n  calculatePlayersScore: action((state, payload) => {\n\n    const scoreById = {}\n\n    state.confirmedLeadIds.forEach(id => {\n      const lead = state.confirmedLeadById[id];\n      if (lead) {\n        const fromPlayerId = lead.fromPlayerId;\n        const toPlayerId = lead.toPlayerId;\n\n        const fromPlayer = state.playerById[fromPlayerId];\n        const toPlayer = state.playerById[toPlayerId];\n\n        if (fromPlayer && toPlayer) {\n          let fromPlayerScore = 0;\n          let toPlayerScore = lead.profit;\n\n          if (lead.profit > 0) {\n            fromPlayerScore = 5000;\n          }\n\n          if (!scoreById[fromPlayerId]) {\n            scoreById[fromPlayerId] = fromPlayerScore;\n          } else {\n            scoreById[fromPlayerId] = scoreById[fromPlayerId] + fromPlayerScore;\n          }\n\n          if (!scoreById[toPlayerId]) {\n            scoreById[toPlayerId] = toPlayerScore;\n          } else {\n            scoreById[toPlayerId] = scoreById[toPlayerId] + toPlayerScore;\n          }\n        }\n      }\n    })\n\n    state.scoreByPlayerId = scoreById;\n\n  }),\n\n  clearGame: thunk(async (actions, payload, helpers) => {\n    await clearGameApi()\n    actions.setGameIsNotReady();\n  }),\n})","import { createTypedHooks } from 'easy-peasy';\nimport { StoreModel } from './model';\n\nconst { useStoreActions, useStoreState, useStore } = createTypedHooks<StoreModel>();\n\nexport const useAppActions = useStoreActions;\nexport const useAppStore = useStoreState;\n\n\n","import { Close, Console, Forward } from '@fcc/icons';\nimport { Button, Card, Grid, Groups, H1, H4, P, Text } from '@fcc/ui';\nimport React from 'react';\nimport { GameAvatar } from 'src/components/GameAvatar';\nimport { useAppActions } from 'src/store';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\nmargin-top:32px;\n`\n\nexport const RulesPage = (props) => {\n\n  const {\n    setCurrentPage\n  } = useAppActions(actions => actions)\n\n  const handleStartGame = () => {\n    setCurrentPage(\"create-player\")\n  }\n\n  return (\n    <Container>\n      <Grid.Row>\n        <Grid.Col size={2}></Grid.Col>\n        <Grid.Col size={8}>\n          <Card\n            header={\n              <Groups design=\"vertical\" size=\"s\">\n                <Card.Title>Добро пожаловать в Open API Demo Game!</Card.Title>\n                <Card.Subtitle style={{ fontSize: '140%' }}>Правила игры</Card.Subtitle>\n              </Groups>\n            }\n            footer={\n              <Groups justifyContent=\"flex-end\">\n                <Button onClick={handleStartGame} design=\"accent\" size=\"xl\">Продолжить\n                  <Forward />\n                </Button>\n              </Groups>\n            }\n          >\n\n            <Grid.Row>\n              <Grid.Col size={3}>\n                <GameAvatar x={undefined} y={undefined} isVisible={true} />\n              </Grid.Col>\n\n              <Grid.Col size={9}>\n\n                <P style={{ fontSize: '120%', lineHeight: 1.5, marginBottom: 16 }}>\n                  Все игроки делятся на две группы: <b>лидогенераторы</b> и <b>специалисты по выдаче</b>.\n                </P>\n                <P style={{ fontSize: '120%', lineHeight: 1.5, marginBottom: 16 }}>\n                  <b>Задача лидогенераторов</b> - привлечь в Банк как можно больше лидов на потребительский кредит.\n                  {/* За каждую выдачу кредита лидегенератору начисляется <b>5000</b> очков. */}\n                </P>\n                <P style={{ fontSize: '120%', lineHeight: 1.5, marginBottom: 16 }}>\n                  <b>Задача специалиста по выдаче</b> - выдать как можно больше кредитов благонадежным заемщикам,\n                  при этом отказать неблагонадежным.\n                  {/* За выдачу кредита <i>благонадежному</i> заемщику игроку <b>начисляется %1</b> от суммы кредита.\n              За выдау кредита <i>неблагонадежному</i> заемщику игрок <b>штрафуется на 1%</b> от стоимости кредита. */}\n                </P>\n              </Grid.Col>\n            </Grid.Row>\n\n\n          </Card>\n        </Grid.Col>\n        <Grid.Col size={2}></Grid.Col>\n      </Grid.Row>\n\n\n    </Container>\n  )\n}","import { Close, Console } from '@fcc/icons';\nimport { Button, Card, FormField, Grid, Groups, H1, H4, Input, P, Radio, Text } from '@fcc/ui';\nimport React from 'react';\nimport { createPlayerApi } from 'src/api';\nimport { useAppActions } from 'src/store';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\nmargin-top:32px;\n`\n\nfunction randomIntFromInterval(min, max) { // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport const CreatePlayerPage = (props) => {\n\n\n  const {\n    setCurrentPage,\n    startGame\n  } = useAppActions(actions => actions)\n\n  const [values, setValues] = React.useState({\n    name: '',\n    group: (randomIntFromInterval(1, 10) >= 4 ? '2' : '1')\n  })\n\n  const [errors, setErrors] = React.useState({\n    name: '',\n    group: ''\n  })\n\n  const handleCreatePlayer = async () => {\n    let nameError = handleValidate('name')\n    const groupError = handleValidate('group')\n    setErrors({\n      name: nameError,\n      group: groupError\n    })\n\n\n\n    if (!nameError && !groupError) {\n      const resp = await startGame({\n        playerName: values.name,\n        playerGroup: parseInt(values.group)\n      })\n\n      if (resp) {\n        setCurrentPage(`game-${values.group}`)\n      }\n    }\n  }\n\n  const handleValidate = (name: string, value?,) => {\n    const toValidate = value !== undefined ? value : values[name];\n\n    if (name === 'name') {\n\n      if (!toValidate || toValidate.trim().length < 2) {\n        const error = 'Имя должно быть не меньше двух символов';\n        const newValues = {\n          ...errors,\n          [name]: error\n        }\n        setErrors(newValues)\n\n        return error;\n      } else {\n        setErrors({\n          ...errors,\n          [name]: ''\n        })\n      }\n    } else if (name === 'group') {\n      setErrors({\n        ...errors,\n        [name]: ''\n      })\n      return '';\n    }\n\n    //   if (!toValidate) {\n    //     const error = 'Выбирите свою роль в игре';\n    //     const newValues = {\n    //       ...errors,\n    //       [name]: error\n    //     }\n    //     setErrors(newValues)\n    //     return error\n    //   } else {\n    //     setErrors({\n    //       ...errors,\n    //       [name]: ''\n    //     })\n    //   }\n    // }\n    // return '';\n\n  }\n\n  const handleChangeValue = (name, value) => {\n    const newValues = {\n      ...values,\n      [name]: value\n    }\n\n    setValues(newValues)\n  }\n\n\n\n  return (\n    <Container>\n      <Grid.Row>\n        <Grid.Col size={2}></Grid.Col>\n        <Grid.Col size={8}>\n          <Card\n            header={\n              <Groups design=\"vertical\" size=\"s\">\n                <Card.Title>Новая игра</Card.Title>\n                <Card.Subtitle style={{ fontSize: '140%' }}>\n                  Придумайте себе ник, а система случайным образом выберет за кого вы будете играть\n                </Card.Subtitle>\n              </Groups>\n            }\n            footer={\n              <Groups justifyContent=\"flex-end\">\n                <Button onClick={handleCreatePlayer} design=\"accent\" size=\"xl\">Начать игру\n                  <Console />\n                </Button>\n              </Groups>\n            }\n          >\n\n            <Grid.Row>\n              <Grid.Col size={8}>\n\n                <FormField size=\"m\" style={{ marginBottom: 16 }}>\n                  <FormField.Label required>Имя игрока</FormField.Label>\n                  <FormField.Content>\n                    <Input\n                      value={values.name}\n                      onBlur={() => handleValidate('name')}\n                      onChange={(e: any) => {\n                        handleValidate('name', e.target.value)\n                        handleChangeValue('name', e.target.value)\n                      }}\n                    />\n                    {errors.name && (\n                      <FormField.Message color=\"critical\">{errors.name}</FormField.Message>\n                    )}\n\n                  </FormField.Content>\n                </FormField>\n\n                <Input\n                  onChange={(e: any) => {\n                    handleValidate('group', e.target.value);\n                    handleChangeValue('group', e.target.value)\n                  }}\n                  value={values.group} style={{ width: '40px', border: '0px', opacity: '0.1' }} />\n\n                {/* <FormField size=\"m\">\n                  <FormField.Label required>Роль в игре</FormField.Label>\n                  <FormField.Content>\n                    <Groups>\n                      <Radio\n                        checked={values.group === '1'}\n                        name=\"group\"\n                        value={\"1\"}\n                        onChange={(e, { value }) => {\n                          handleValidate('group', value);\n                          handleChangeValue('group', value)\n                        }}\n                      >\n                        Лидогенератор\n                      </Radio>\n\n                      <Radio\n                        checked={values.group === '2'}\n                        name=\"group\"\n                        value={\"2\"}\n                        onChange={(e, { value }) => {\n                          handleValidate('group', value);\n                          handleChangeValue('group', value)\n                        }}\n                      >\n                        Специалист по выдаче\n                      </Radio>\n                    </Groups>\n                    {errors.group && (\n                      <FormField.Message color=\"critical\">{errors.group}</FormField.Message>\n                    )}\n                  </FormField.Content>\n                </FormField> */}\n\n              </Grid.Col>\n            </Grid.Row>\n\n\n          </Card>\n        </Grid.Col>\n        <Grid.Col size={2}></Grid.Col>\n      </Grid.Row>\n\n\n    </Container>\n  )\n}","import { Close } from '@fcc/icons';\nimport { Button, Grid, Groups, P } from '@fcc/ui';\nimport React, { useEffect } from 'react';\nimport { GameAvatar } from 'src/components';\nimport { useAppActions, useAppStore } from 'src/store';\nimport { generateAvatar } from 'src/utils';\nimport styled from 'styled-components';\nimport useSound from 'use-sound';\n\nimport { useGame1 } from './useGame1';\n\n//import themeMusic from './../../assets/sounds/theme.mp3'\n\nconst Container = styled.div`\nmargin: 0 auto;\nwidth: 1280px;\nheight: calc(720px - 49px);\n\nbackground-position: 0 -15px;\nposition: relative;\nz-index: 1;\n\n&::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: .8;\n  z-index: -1;\n  background: url('/demogame/img/game-assets/mall_bg.png');\n}\n`\n\nexport const Game1 = (props) => {\n\n  const {\n    player,\n    avatars\n  } = useAppStore(state => state)\n\n  const {\n    setCurrentPage,\n    startGame\n  } = useAppActions(actions => actions)\n\n  const {\n    playingMusic,\n    setPlayingMusic,\n    playTheme,\n\n    onClick\n  } = useGame1();\n\n\n  const handleClick = (e) => {\n\n    if (!playingMusic) {\n      setPlayingMusic(true);\n      playTheme()\n    }\n\n  }\n\n\n  //const avatar = generateAvatar()\n\n  return (\n    <Container onClick={handleClick}>\n\n      {avatars.length >= 11 && (\n        <>\n          <GameAvatar\n            onClick={onClick}\n            index={0}\n            profession={avatars[0].profession}\n            isVisible={avatars[0].isVisible}\n            x={20}\n            y={140}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={1}\n            profession={avatars[1].profession}\n            isVisible={avatars[1].isVisible}\n            x={230}\n            y={160}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={2}\n            profession={avatars[2].profession}\n            isVisible={avatars[2].isVisible}\n            x={420}\n            y={140}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={3}\n            profession={avatars[3].profession}\n            isVisible={avatars[3].isVisible}\n            x={650}\n            y={160}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={4}\n            profession={avatars[4].profession}\n            isVisible={avatars[4].isVisible}\n            x={1090}\n            y={160}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={5}\n            profession={avatars[5].profession}\n            isVisible={avatars[5].isVisible}\n            x={20}\n            y={470}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={6}\n            profession={avatars[6].profession}\n            isVisible={avatars[6].isVisible}\n            x={230}\n            y={380}\n          />\n\n\n          <GameAvatar\n            onClick={onClick}\n            index={7}\n            profession={avatars[7].profession}\n            isVisible={avatars[7].isVisible}\n            x={410}\n            y={480}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={8}\n            profession={avatars[8].profession}\n            isVisible={avatars[8].isVisible}\n            x={630}\n            y={450}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={9}\n            profession={avatars[9].profession}\n            isVisible={avatars[9].isVisible}\n            x={880}\n            y={430}\n          />\n\n          <GameAvatar\n            onClick={onClick}\n            index={10}\n            profession={avatars[10].profession}\n            isVisible={avatars[10].isVisible}\n            x={1090}\n            y={480}\n          />\n        </>\n      )}\n\n\n\n    </Container>\n  )\n}","import * as _ from 'lodash/fp';\nimport React from 'react';\nimport { createLeadApi } from 'src/api';\nimport { useAppActions, useAppStore } from 'src/store';\nimport { getRandom } from 'src/utils';\nimport useSound from 'use-sound';\n\nimport { generateAvatar } from './../../utils/avatars';\n\n\n\n\n\nexport const useGame1 = () => {\n  const {\n    player,\n    avatars\n  } = useAppStore(state => state)\n\n  const {\n    setCurrentPage,\n    startGame,\n    loadPlayers,\n    regenerateAvatats,\n    hideAvatar\n  } = useAppActions(actions => actions)\n\n  const [playingMusic, setPlayingMusic] = React.useState(false);\n\n\n  const [playTheme, { stop }] = useSound(\n    '/sounds/theme.mp3',\n    {\n      volume: 0.01,\n      onend: () => {\n        setPlayingMusic(false)\n      }\n    }\n  );\n\n\n\n\n  React.useEffect(() => {\n\n\n    return () => {\n      //stop();\n    }\n\n  }, [])\n\n\n  //const [avatars, setAvatars] = React.useState(buildAvatars())\n  const timer = React.useRef(null);\n\n\n\n  React.useEffect(() => {\n    const t = setTimeout(() => {\n\n      timer.current = setInterval(() => {\n        regenerateAvatats();\n\n      }, 1500)\n    }, 1000)\n\n    return () => {\n      if (t) clearTimeout(t);\n      if (timer.current) {\n        clearInterval(timer.current)\n      }\n    }\n  }, [])\n\n  const [playCatch] = useSound(\n    '/sounds/catch.mp3',\n    {\n      volume: 0.5,\n      interrupt: true\n    }\n  );\n\n  const [nextPlayerIndex, setNextPlayerIndex] = React.useState(0)\n\n  const onClick = async (index: number) => {\n\n    playCatch();\n\n\n\n    hideAvatar(index);\n\n\n    const avatar = avatars[index];\n    let players = await loadPlayers();\n\n    players = players.filter(i => i.playerGroup === 2)\n\n    let toPlayerId = null;\n\n    if (players?.length) {\n      if (nextPlayerIndex >= players.length) {\n        toPlayerId = players[0].playerId;\n        setNextPlayerIndex(1);\n      } else {\n        toPlayerId = players[nextPlayerIndex].playerId;\n        setNextPlayerIndex(nextPlayerIndex + 1);\n      }\n\n      await createLeadApi({\n        fromPlayerId: player.playerId,\n        toPlayerId,\n        salary: avatar.salary,\n        amount: avatar.amount,\n        profit: avatar.profit,\n        avatar: avatar.avatar,\n        profession: avatar.profession,\n        confirmed: false\n      })\n    }\n    //console.log('players',players)\n\n  }\n\n  return {\n    playingMusic,\n    setPlayingMusic,\n    playTheme,\n    avatars,\n    onClick\n  }\n}","import * as _ from 'lodash/fp';\nimport React from 'react';\nimport { getNotConfirmedLeadsApi } from 'src/api';\nimport { useAppActions, useAppStore } from 'src/store';\nimport { getRandom, rectanglesIntersect, showBadLead, showGoodLead } from 'src/utils';\nimport useSound from 'use-sound';\n\nimport { runDebounced } from './../../utils/debounced';\n\nconst xPositions = [\n  20, 130, 240, 350, 460, 570, 680, 790, 900, 1010, 1120\n]\n\nconst generateLeadPosition = (leadId, profit) => {\n  const xPosIndex = getRandom(0, xPositions.length - 1);\n  return {\n    leadId,\n    y: -100,\n    x: xPositions[xPosIndex],\n    speed: getRandom(10, 35),\n    profit\n  }\n}\n\nconst isPosIntersect = (i, bagX) => {\n  return rectanglesIntersect(i.x, i.y, i.x + 96, i.y + 96,\n    bagX, 560, bagX + 96, 570 + 96);\n}\n\nexport const useGame2 = () => {\n  const {\n    bagX,\n    player,\n    leadPositions,\n    nonConfirmedLeadIds,\n    nonConfirmedLeadById,\n    catchedIds\n  } = useAppStore(state => state)\n\n  const {\n    getState,\n    setCurrentPage,\n    startGame,\n    updateLeadPosition,\n    loadNonConfirmedLeads,\n    setBagX,\n    catchLeadId\n  } = useAppActions(actions => actions)\n\n  const leadsTimer = React.useRef(null);\n  const fallingTimer = React.useRef(null);\n  const [playingMusic, setPlayingMusic] = React.useState(false);\n  const [catchIsPlaying, setCatchIsPlaying] = React.useState(false);\n\n\n  const [playCatch] = useSound(\n    '/sounds/catch.mp3',\n    {\n      volume: 0.5,\n      interrupt: true,\n      onend: () => {\n        setCatchIsPlaying(false)\n      }\n    }\n  );\n\n  const [playTheme, { stop }] = useSound(\n    '/sounds/theme.mp3',\n    {\n      volume: 0.01,\n      onend: () => {\n        //console.log('xxxx-stop')\n        setPlayingMusic(false)\n      }\n    }\n  );\n\n  //const [bagX, setBagX] = React.useState(0);\n\n\n\n\n  const fallLeads = () => {\n    const { bagX, nonConfirmedLeadIds, nonConfirmedLeadById, leadPositions } = getState();\n\n    leadPositions.forEach(i => {\n      const isIntersect = isPosIntersect(i, bagX)\n\n      if (isIntersect) {\n        if (i.profit >= 0) {\n          showGoodLead(i.profit)\n        } else if (i.profit < 0) {\n          showBadLead(i.profit)\n        }\n\n        catchLeadId(i.leadId);\n        setCatchIsPlaying(false);\n      }\n    })\n\n    //console.log('nonConfirmedLeadIds', nonConfirmedLeadIds)\n    nonConfirmedLeadIds.forEach(id => {\n      updateLeadPosition(generateLeadPosition(id, nonConfirmedLeadById[id].profit))\n    })\n\n  }\n\n  React.useEffect(() => {\n\n    fallingTimer.current = setInterval(() => {\n      //console.log('tik')\n      fallLeads();\n    }, 250)\n\n    return () => {\n      clearInterval(fallingTimer.current);\n    }\n  }, [])\n\n  React.useEffect(() => {\n\n    leadsTimer.current = setInterval(async () => {\n      await loadNonConfirmedLeads();\n    }, 1000)\n\n    return () => {\n      //stop();\n      clearInterval(leadsTimer.current);\n    }\n\n  }, [])\n\n\n  //console.log('playingMusic',playingMusic)\n\n  const onMouseMove = (e) => {\n    const { leadPositions, nonConfirmedLeadById } = getState();\n\n    if (!playingMusic) {\n      console.log('playingMusic', playingMusic)\n      setPlayingMusic(true);\n      playTheme()\n    }\n\n    leadPositions.forEach(i => {\n      const isIntersect = isPosIntersect(i, bagX)\n      console.log('isIntersect', isIntersect, i)\n      if (isIntersect) {\n        const lead = nonConfirmedLeadById[i.leadId];\n\n        if (i.profit >= 0) {\n          showGoodLead(i.profit)\n        } else if (i.profit < 0) {\n          showBadLead(i.profit)\n        }\n        catchLeadId(i.leadId);\n\n        if (catchedIds.indexOf(i.leadId) === -1) {\n          setCatchIsPlaying(true)\n          playCatch();\n        }\n      }\n    })\n\n\n    if (e.pageX <= 1190) {\n      setBagX(e.pageX)\n    }\n  }\n\n\n  return {\n\n\n\n    onMouseMove,\n    bagX,\n\n  }\n}","import { Close } from '@fcc/icons';\nimport { Button, Grid, Groups, P } from '@fcc/ui';\nimport React, { useEffect } from 'react';\nimport { Bag, GameAvatar, GameAvatar2 } from 'src/components';\nimport { useAppActions, useAppStore } from 'src/store';\nimport { generateAvatar, rectanglesIntersect } from 'src/utils';\nimport styled from 'styled-components';\nimport useSound from 'use-sound';\n\nimport { useGame2 } from './useGame2';\n\n//import themeMusic from './../../assets/sounds/theme.mp3'\n\nconst Container = styled.div`\nmargin: 0 auto;\nwidth: 1280px;\nheight: calc(720px - 49px);\n\nbackground-position: 0 -15px;\nposition: relative;\nz-index: 1;\n\n&::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 1;\n  z-index: -1;\n  background: #E6F6F8;\n}\n`\n\nexport const Game2 = (props) => {\n\n  const {\n    player,\n    leadPositions,\n    nonConfirmedLeadIds,\n    nonConfirmedLeadById\n  } = useAppStore(state => state)\n\n  const {\n    setCurrentPage,\n    startGame\n  } = useAppActions(actions => actions)\n\n  const {\n    bagX,\n\n    onMouseMove\n\n  } = useGame2();\n\n\n  // setInterval(() => {\n\n  // })\n\n\n  // const isIntersect = rectanglesIntersect(20, 470, 20+96, 470+96,\n  //   bagX, 560, bagX+96, 570+96)\n\n  //console.log('nonConfirmedLeadById', nonConfirmedLeadById)\n\n  //const avatar = generateAvatar()\n\n  return (\n    <div style={{ width: '100%', height: '100%' }} onMouseMove={onMouseMove}>\n      <Container >\n\n        <Bag x={bagX} />\n\n        {leadPositions.map(pos => {\n\n\n          const lead = nonConfirmedLeadById[pos.leadId];\n          //console.log('pos', pos, 'lead', lead)\n          if (!pos || !lead) return null;\n\n\n\n          return (\n            <GameAvatar2\n              key={lead.leadId}\n              id={lead.leadId}\n              string={lead.avatar}\n              profession={lead.profession}\n              salary={lead.salary}\n              amount={lead.amount}\n              x={pos.x}\n              y={pos.y}\n            />\n          )\n        })}\n\n\n\n\n      </Container>\n    </div>\n  )\n}","import { Notifications } from '@fcc/ui';\nimport React from 'react';\nimport { NavigationBar } from './components';\nimport { CreatePlayerPage, Game1, Game2, RulesPage } from './pages';\nimport { useAppStore } from './store';\nimport { toast } from './utils';\n\n\nfunction App() {\n  const {\n    currentPage\n  } = useAppStore(state=>state)\n  return (\n    <div>\n      <NavigationBar />\n      {currentPage === 'rules' && <RulesPage />}\n      {currentPage === 'create-player' && <CreatePlayerPage />}\n      {currentPage === 'game-1' && <Game1 />}\n      {currentPage === 'game-2' && <Game2 />}\n\n      <Notifications service={toast} limit={3}  valign=\"top\" align=\"right\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios'\n\nexport default function main (){\n  axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Body} from '@fcc/ui'\nimport { StoreProvider } from 'easy-peasy';\nimport { store } from './store';\nimport configAxios from './api/configAxios';\n\nconfigAxios();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Body>\n    <StoreProvider store={store}>\n      <App />\n      </StoreProvider>\n    </Body>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}